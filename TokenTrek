import requests
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

class TokenTrek:
    def __init__(self, coingecko_api_url: str = 'https://api.coingecko.com/api/v3'):
        self.api_url = coingecko_api_url

    def get_token_details(self, token_id: str) -> dict:
        url = f"{self.api_url}/coins/{token_id}"
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        else:
            return {"error": "Token not found"}

    def get_price_data(self, token_id: str, vs_currency: str = 'usd', days: int = 30) -> pd.DataFrame:
        url = f"{self.api_url}/coins/{token_id}/market_chart?vs_currency={vs_currency}&days={days}"
        response = requests.get(url)
        data = response.json()

        prices = data['prices']
        df = pd.DataFrame(prices, columns=['timestamp', 'price'])
        df['timestamp'] = pd.to_datetime(df['timestamp'], unit='ms')
        return df

    def plot_price_data(self, token_id: str, vs_currency: str = 'usd', days: int = 30):
        df = self.get_price_data(token_id, vs_currency, days)
        plt.figure(figsize=(12, 6))
        plt.plot(df['timestamp'], df['price'])
        plt.title(f'{token_id.capitalize()} Price over the last {days} days')
        plt.xlabel('Date')
        plt.ylabel(f'Price ({vs_currency.upper()})')
        plt.grid(True)
        plt.show()

    def get_transaction_history(self, address: str) -> pd.DataFrame:
        ETHERSCAN_API_KEY = 'YOUR_ETHERSCAN_API_KEY'
        ETHERSCAN_URL = f"https://api.etherscan.io/api?module=account&action=txlist&address={address}&startblock=0&endblock=99999999&sort=asc&apikey={ETHERSCAN_API_KEY}"
        
        response = requests.get(ETHERSCAN_URL)
        data = response.json()
        
        if data['status'] == '1':
            df = pd.DataFrame(data['result'])
            df['value'] = df['value'].astype(float) / 1e18  # Convert wei to ether
            df['timeStamp'] = pd.to_datetime(df['timeStamp'], unit='s')
            return df
        else:
            return pd.DataFrame()

# Example Usage
if __name__ == "__main__":
    token_trek = TokenTrek()

    # Fetch Token Details
    token_id = 'bitcoin'
    token_details = token_trek.get_token_details(token_id)
    print("Token Details:", token_details)

    # Fetch and Plot Price Data
    token_trek.plot_price_data(token_id, days=30)

    # Fetch Transaction History (requires Etherscan API key)
    address = '0xYourAddressHere'
    transaction_history = token_trek.get_transaction_history(address)
    print("Transaction History:")
    print(transaction_history)
